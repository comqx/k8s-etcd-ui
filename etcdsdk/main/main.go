package main

import (
	"context"
	"fmt"
	"time"

	"github.com/etcd-manage/etcd-manage-server/etcdsdk/model"
	"go.etcd.io/etcd/clientv3"
)

func main() {
	var (
		client3Config clientv3.Config
		//cert          tls.Certificate
		resp *clientv3.GetResponse
		//err  error
	)
	cfg := model.Config{
		EtcdId:    8,
		Version:   "v3",
		Address:   []string{"http://127.0.0.1:2379"},
		TlsEnable: "false",
		CertFile:  nil,
		KeyFile:   nil,
		CaFile:    nil,
	}
	//cfg.CertFile = common.Base64Decode("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lJQ1dRWENPM1A3QUF3RFFZSktvWklodmNOQVFFTEJRQXdFakVRTUE0R0ExVUUKQXhNSFpYUmpaQzFqWVRBZUZ3MHlNREE0TURRd01qVXlNelZhRncweU1UQTRNRFF3TWpVeU16VmFNQmd4RmpBVQpCZ05WQkFNVERXeHhlQzF0WVhOMFpYSXRNREV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURoNWJqUDNXN2NzVlhEaHdKWHlrWUR6RjRLaldrYXFQc0xNNmVFRGhYZWJXMGVaZi9RT3QrcUFxaWgKbTdPZ3BISFp6VFhFODVVSHV5QkFTM3daQU0wZDRqODY1bHFwaTJuTU41Vm5GTkNMOEpmdlRiTVdocFpleS9DVApPc1J3amhLQ0JHc2kvbHE5SEt0WnJtdmd0TjRNVlhyanB4cE5Td1BaeDFjNENBUXJPOFk1MkFpRlU5cFJoNmtHCmZ1TC82NlFGaDlpTnN2eExOUnFmVFpLY3oxUWxrZEdyWUdqVXE1blVrV3MwQnM3NmpmU3hQRFBydG1XN1lhdnEKbHo5RjVQSzZaSTY3Mm84MWNzOTVQR0VKV2JRTWpBaHRnckpKMGdoenVoTU15YlRYQWFmUCtQZkUxMEdQWlRMUgpvWit5c1U2dWI2eHNwVm1NZzR0b1lxMWhVWW4zQWdNQkFBR2pkREJ5TUE0R0ExVWREd0VCL3dRRUF3SUZvREFkCkJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdRUVlEVlIwUkJEb3dPSUlOYkhGNExXMWgKYzNSbGNpMHdNWUlKYkc5allXeG9iM04waHdRS0ZBTm1od1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQgpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFOODNxZFJ2eWl1ZVZkd09ZOWozVG0raFVxdFN5anV3eWI3aGJSCnR2UDNJb3RLbm50ZzNpRndYZVpNQkxTWUhvWU9jVXJ6ZndCUzZHOUgrdjBkRFh0Vi8vR3ljKzQ4QUVLbjhjZU8KT2xIRnJJQkRUMkE5VVBZTUhkVmNMcEZjOHJvdGhPQmJjd3RGSFB6aStqUlI5dE9oYjhQY0l0WFhTL29nOXVNMQpqaE5zU282VHlhYlA0U3BVSUhVNXpkbEMxaHBVTXk4b2V0SnI0d1c3SEpvK00xd2pjWmNNTU5VTEE4UEllb2xICndtR1dFa1g2OFZVQzhGU0FDK1ZyeUlLM20vTWVjQkEwMFFseGtBZmprbWt2b2NqbHhvVTJ1ZzVLTHYyWUthb0YKeC9mVjFuOUNuTFlpdmU3VWI5T2pGTmxjazJZOHpMNjRhTXlnVzZvOWRWTzBDcFVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K")
	//cfg.KeyFile = common.Base64Decode("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNGVXNHo5MXUzTEZWdzRjQ1Y4cEdBOHhlQ28xcEdxajdDek9uaEE0VjNtMXRIbVgvCjBEcmZxZ0tvb1p1em9LUngyYzAxeFBPVkI3c2dRRXQ4R1FETkhlSS9PdVphcVl0cHpEZVZaeFRRaS9DWDcwMnoKRm9hV1hzdndrenJFY0k0U2dnUnJJdjVhdlJ5cldhNXI0TFRlREZWNjQ2Y2FUVXNEMmNkWE9BZ0VLenZHT2RnSQpoVlBhVVllcEJuN2kvK3VrQllmWWpiTDhTelVhbjAyU25NOVVKWkhScTJCbzFLdVoxSkZyTkFiTytvMzBzVHd6CjY3Wmx1MkdyNnBjL1JlVHl1bVNPdTlxUE5YTFBlVHhoQ1ZtMERJd0liWUt5U2RJSWM3b1RETW0wMXdHbnovajMKeE5kQmoyVXkwYUdmc3JGT3JtK3NiS1ZaaklPTGFHS3RZVkdKOXdJREFRQUJBb0lCQUFuQzg0bUgrQkp4VjFOcgpzaDQ1RDIxNmwxVzlacDFRVUFqYjRwRkNTbytpQ3VVVlkwaU1RcjRGLzJOOFp2YTZKSEZVL00zVitNcXN1MmdMCjJ3RDVsK09DczFqSU80SzRFNHBQbkpVbndSdEsra1hOQmNBamNMd0g5QTFvckxSd2J6eFBGSkllaTYxQVgrY3cKTWxremQ2VHd6SzZwdWVrOUpKMTBqOEJNR0dJRnpuSnlBMm5EYjU4WFJCM2UySnFRQlFEQ1BaM1BJaHE3UlJrNQp3Q1ExMG9jbXdKbUQwTGkydUlqRW5JOTU4ZHRzVVdBSmI5Z1FoNTVIeFphSEU2R05pTkRQdlpxZCtyc1ZJSGRsClFqR2MvQTY0NVpvSnNIQWczeGVyWnArdytvT0pmc253SEJkQ1ZpZlFTR0lWa1g0a243QXVzZFZrSDFWN1JqYjEKT2NFWWd3RUNnWUVBNzM3YnpVT3RDRWUvNnNsaHhMYm9JYXVLQXk3bDFDdk16MWNYMXJDaDV2Z2V3bW4yd3RzRAowZE9xSWdGcXZ1MVIvTTltVkpsZzNYeTRRc01oc2Vabk9BRTJIeGZIcFByVkoyOGJlMm1paWdZQjI3ZTBnY0FpCnhKb3h2L2pSazlZRTZzZnJYN3lOU2pIQWJBWGszWjh0Y1BnU0pxRktDUUp3YmgyR2QrcTdBZWtDZ1lFQThYYjMKWE9kY05aczhteEFDZjhqMUZjNTlRZGNqOGJlQ1YrU0ViM09YMkhxMlZobjJkbzltbFcyaTA2ejFuVTU3NVdqUQpHUW43NDNpUjYzb3pqSmZLNU5EKzJidWRSMnZOeVo2VkxzUHlySlZIUUxHSDBhT1pvL3RMdTZoQStCazJZWm83ClZOWFBReHFIMVF1UG1UNWFIbHpXMVBrWnpZQndFWVVnSHpKbjROOENnWUI3QnczZW1mOVBHNXlJL2I1TmtUQVoKNjhiUDc4MThlcXVSYjBuOXJXcmQvV08vdHpOZDBhaGFwNExrU1JvT3psYXBxZGtGYUcwTUdqK0ZmRHZZNldUbwpyaWFoUGxQK2VpUDVSK2cwTTRXZHBZeGExRG5UMVdHRzRUYmhTTzVRSlVjTlhIbWJDbjhDT0NDQzNWdytSTURSCklYNGhmZ1ZNTDRhVjZuRGpOUit2MFFLQmdRQ3BGTGdEK3hJTGk0ZDF3VkV1cjhaR25kQUNBYWR1eENSbWJXTDcKTkFNNUdEeURzQ3h3T3R3SGVMMFM0a01mQXUwbzZDc0h6WUR2ZU9jYzcvWVcxZGZDUUVLa3JvWmtrNjJIS0IrbwpucGRZbUROTHJzUy9YSUxpVzc1ZFNtVXNGV09LRnRqQy8vRGhPVHV5U0NVbWxvMitReDVBQmFvMngyQXlOSGtZCnYxQVVHd0tCZ0JNMklPWDIzc3VSd0o1UHU1eGowQzFkVzh1QzFaYjEzeWVoZm93ZjdueFFxWmhtRHk4cGlOUmUKUnFKQlFhaFpnYTdKWi9uZWtKZTh5S3hueGhtQWdJSy9hTmxJMkQ3NThEL1d5NENQZVluQ2hKS0VZTzh5bHFwMgovVk5JeXpIOHNLNWs1M1E0UzNmdThlNlVyM29KcndFQWtkVmZSeGFsbzU5V1dwWjY2bkp0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==")
	//cfg.CaFile = common.Base64Decode("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN3akNDQWFxZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFTTVJBd0RnWURWUVFERXdkbGRHTmsKTFdOaE1CNFhEVEl3TURnd05EQXlOVEl6TlZvWERUTXdNRGd3TWpBeU5USXpOVm93RWpFUU1BNEdBMVVFQXhNSApaWFJqWkMxallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5sN0J6YzZzcWFNCjJvbnAwOVMxTndVK0xKRkFFeXdLN2lqUHV4TlRSV2VQSzFwajF5TmxiUVlDV1pHZUExMUFQRVFUdEVzc0c1dlUKeWJTNHUydzFkM3Q2WEpwb2FpZ3pOVkVPaWVlUkgxOE9lb2pVNWdWM2hZTlNUTVByQUIrZXJ0YVcxNkMzQmhTRgprVmFrc2I5UHIxNU0ramE3WUpCQnhnL2hNOEtIbzU2NVl3Z0hJUXoxM253R3JqMUVPc2x0YkVRN0xValFRdU9wCkpmYU82WElCZWVhUlFJWm9yZjZLTVdNY29ScG9nbFFwcXRXWVh1cTUwOUNWd3NqTWNmZDEwV3dQUHE0aWt3RE0KYVFYS0JXTWhwczR4azY4SWcrVVNLRGkxZXdzOThrOFo5UlQ5b001Z3FBVVQ1RzRyTGpWNzZSZDQrR2xiblFpdwpkUHFxdzdMMkwrOENBd0VBQWFNak1DRXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CCkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSDdkRXNiSWZWN3RLNTlEZjBIRFNLd1ZLS3dkWGlzbTlqTkYKYUI2SG5ST1RvaE5lb2NNYXFWRlo5N0RWZytlTzh0UUJVdFhrVlg1N08vVzY2dFMrckNIcW04cVJYNzJFMVRzRQpmQzI2QW9tdXdEbnBHOGxvUXdLV2x4L2YrY1BEdkVhZ0MrLytDZVI3dmZrc09TbktGbVVhS0l4M0MxSWVYT1RKCk1jOWpVQ1Z0N05xbzBjY3dDOUplMkVqd3lnYkVXUEVOZnczMGRtZ1B4UTNKdXJRSmhLZlhFU21lZ0hOTUw4R08KQnFHY3YzY1A5TWQrbzhJdUVpby9BUkdCWjE2QXFrSmozTDY2TGc1bjBlVldLVWZpOE9hd3BvL2F3Q2JuaXhCMgoyQ3lZRkFiNHR0VkVZT3dpT2FjTkRiaXQvc0xuejFMcHpkT2xlQy96WjZTd2c4eWVBbE09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K")

	//if cert, err = tls.X509KeyPair(cfg.CertFile, cfg.KeyFile); err != nil {
	//	return
	//}
	//pool := x509.NewCertPool()
	//pool.AppendCertsFromPEM(cfg.CaFile)
	//_tlsConfig := &tls.Config{
	//	Certificates: []tls.Certificate{cert},
	//	RootCAs:      pool,
	//}
	client3Config = clientv3.Config{
		Endpoints:   cfg.Address,
		DialTimeout: 5 * time.Second,
	}
	cliNew, _ := clientv3.New(client3Config)
	resp, _ = clientv3.NewKV(cliNew).Get(context.Background(), "/", clientv3.WithFromKey(), clientv3.WithKeysOnly())
	fmt.Println(resp)
}
